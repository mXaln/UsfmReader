/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.tables.Languages;
import jooq.tables.records.LanguagesRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LanguagesDao extends DAOImpl<LanguagesRecord, jooq.tables.pojos.Languages, Integer> {

    /**
     * Create a new LanguagesDao without any configuration
     */
    public LanguagesDao() {
        super(Languages.LANGUAGES, jooq.tables.pojos.Languages.class);
    }

    /**
     * Create a new LanguagesDao with an attached configuration
     */
    public LanguagesDao(Configuration configuration) {
        super(Languages.LANGUAGES, jooq.tables.pojos.Languages.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.tables.pojos.Languages object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.tables.pojos.Languages> fetchById(Integer... values) {
        return fetch(Languages.LANGUAGES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.tables.pojos.Languages fetchOneById(Integer value) {
        return fetchOne(Languages.LANGUAGES.ID, value);
    }

    /**
     * Fetch records that have <code>slug IN (values)</code>
     */
    public List<jooq.tables.pojos.Languages> fetchBySlug(String... values) {
        return fetch(Languages.LANGUAGES.SLUG, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<jooq.tables.pojos.Languages> fetchByName(String... values) {
        return fetch(Languages.LANGUAGES.NAME, values);
    }

    /**
     * Fetch records that have <code>direction IN (values)</code>
     */
    public List<jooq.tables.pojos.Languages> fetchByDirection(String... values) {
        return fetch(Languages.LANGUAGES.DIRECTION, values);
    }
}
